rules_version = '2';

service cloud.firestore {
  // ユーザ認証の関数
  function isAuthUser(auth, userId) {
    // 認証あり && uidとuserIdが一致する
    return auth != null && auth.uid == userId
  }

  // スキーマ検証の関数
  function isValidUserSchema(u) {
    return u.size() == 3 // ドキュメントは3つのプロパティを持つこと
      && 'name' in u && u.name is string // `name`プロパティがあり、型がstringであること
      && 'gender' in u && u.gender is string // `gender`プロパティがあり、型がstringであること
      && 'age' in u && u.age is number // `age`プロパティがあり、型がnumberであること
  }

  // 値のバリデーションの関数
  function isValidUserData(u) {
    return 1 <= u.name.size() && u.name.size() <= 30
      && u.gender.matches('male|female|genderDiverse')
      && 0 <= u.age && u.age <= 150
  }

  match /databases/{database}/documents {
    match /users/{userId} {
      allow create: if isAuthUser(request.auth, userId)
        && isValidUserSchema(request.resource.data)
        && isValidUserData(request.resource.data);
      allow read: if isAuthUser(request.auth, userId);
      allow update: if isAuthUser(request.auth, userId)
        && isValidUserSchema(request.resource.data)
        && isValidUserData(request.resource.data);
      allow delete: if isAuthUser(request.auth, userId);
    }
  }
}
